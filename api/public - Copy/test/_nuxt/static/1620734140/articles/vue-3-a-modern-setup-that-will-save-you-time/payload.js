__NUXT_JSONP__("/articles/vue-3-a-modern-setup-that-will-save-you-time", (function(a,b,c,d,e,f,g,h,i,j,k,l,m){return {data:[{article:{id:5,status:"published",created_on:"2020-09-12T11:35:42+00:00",title:"Vue 3: A Modern Setup That Will Save You Time",introduction:"\u003Cp\u003EWith the third major version of Vue being \u003Cspan style=\"text-decoration: line-through;\"\u003Ealmost\u003C\u002Fspan\u003E ready, I started using it for most of my new Vue projects. For years, I have been using the excellent Vue CLI to scaffold new apps, but recently \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fvitejs\u002Fvite\"\u003EVite\u003C\u002Fa\u003E (French for fast ⚡️) caught my eye.\u003C\u002Fp\u003E",content:"\u003Cp\u003EVite is an opinionated build tool by the creator of Vue, \u003Ca href=\"https:\u002F\u002Fevanyou.me\u002F\"\u003EEvan You\u003C\u002Fa\u003E. It has built-in support for modern front-end tools (PostCSS, CSS preprocessors, TypeScript, ES imports...), it's extensible, but most of all: it's fast. By using modern browsers' native ES Module imports (a similar approach as \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fpikapkg\u002Fsnowpack\"\u003ESnowpack\u003C\u002Fa\u003E), launching the dev server only takes seconds and hot reloading is instant.\u003C\u002Fp\u003E\n\u003Cp\u003ESetting up a new Vite project takes little time, here's how I do it.\u003C\u002Fp\u003E\n\u003Ch2\u003ECreating a new Vite App\u003C\u002Fh2\u003E\n\u003Cp\u003EFirst of all, open your terminal and navigate to the parent directory of your new project. Run the following commands:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Eyarn create vite-app my-new-project\ncd my-new-project\nyarn\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EThis will create a \u003Ccode\u003Emy-new-project\u003C\u002Fcode\u003E folder containing the base files you need to get started, navigate you to the root of your project, and install dependencies.\u003C\u002Fp\u003E\n\u003Ch2\u003ERunning the Dev Server\u003C\u002Fh2\u003E\n\u003Cp\u003ENow run the following command to start the dev server:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Eyarn dev\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EIf you point your browser to \u003Ccode\u003Ehttp:\u002F\u002Flocalhost:3000\u002F\u003C\u002Fcode\u003E you will see your Vue app running. Try changing some things in \u003Ccode\u003Esrc\u002FHelloWorld.vue\u003C\u002Fcode\u003E and watch how the page will refresh the changed parts in a blink.\u003C\u002Fp\u003E\n\u003Cfigure\u003E\u003Cimg src=\"https:\u002F\u002Fs3.eu-west-3.amazonaws.com\u002Fsimonwuyts-portfolio\u002F43800174-50ed-46ae-879b-4435a1e81a33.png\" alt=\"Vue 3 application running in the browser\" \u002F\u003E\u003C\u002Ffigure\u003E\n\u003Ch2\u003EBuilding for Production\u003C\u002Fh2\u003E\n\u003Cp\u003ERunning the Vite dev server will only work in browsers that support native ES Module imports (that's all of the latest versions of today's modern browsers). To build your app for production, run the following command:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Eyarn build\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EBehind the scenes, Vite will use Rollup to bundle and optimize your app. The result will be copied to the \u003Ccode\u003Edist\u003C\u002Fcode\u003E folder.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fs3.eu-west-3.amazonaws.com\u002Fsimonwuyts-portfolio\u002Feeb378f6-bf44-4b47-8e59-e2d031e40067.png\" alt=\"Vue 3 application running in the browser\" width=\"1514\" height=\"1050\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Ch2\u003EFuture-Proof CSS\u003C\u002Fh2\u003E\n\u003Cp\u003EVite natively supports CSS imports and uses PostCSS for CSS processing. This means you can add a \u003Ccode\u003Epostcss.config.js\u003C\u002Fcode\u003E file and install any plugin you might need. I like to use the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fcsstools\u002Fpostcss-preset-env\"\u003E\u003Ccode\u003Epostcss-preset-env\u003C\u002Fcode\u003E\u003C\u002Fa\u003E plugin, which lets you write modern CSS and polyfills it based on \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fbrowserslist\u002Fbrowserslist\"\u003Ethe browsers you want to support.\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EFirst, install the plugin by running\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Eyarn add -D postcss-preset-env\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003ENow add the following \u003Ccode\u003Epostcss.config.js\u003C\u002Fcode\u003E file to the root of your project:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-js\"\u003Emodule.exports = {\n  plugins: {\n    'postcss-preset-env': { stage: 1 },\n  },\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EThe \u003Ccode\u003Estage\u003C\u002Fcode\u003E property defines how many experimental features you want to enable, from \u003Ccode\u003E0\u003C\u002Fcode\u003E (experimental) through \u003Ccode\u003E4\u003C\u002Fcode\u003E (stable).\u003C\u002Fp\u003E\n\u003Cp\u003EYou can now write modern CSS while Vite will take care of translating it to the browser:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-css\"\u003E@import '_base.css';\n\n@custom-media --small-viewport (max-width: 31.25em);\n\n:root {\n  --color-primary: red;\n  --color-secondary: blue;\n}\n\np {\n  color: var(--color-primary);\n\n  &amp;:hover {\n    color: var(--color-secondary);\n  }\n\n  @media (--small-viewport) {\n    color: black;\n  }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EIt's up to you how and where you want to load your CSS styles. You can either use the \u003Ccode\u003E&lt;style&gt;\u003C\u002Fcode\u003E block in your Single File Components or import it directly in your \u003Ccode\u003Emain.js\u003C\u002Fcode\u003E file.\u003C\u002Fp\u003E\n\u003Ch3\u003EA note about SCSS\u003C\u002Fh3\u003E\n\u003Cp\u003ESometimes I still prefer the power of SCSS over CSS. Luckily, Vite supports pre-processors. All you need to do is install it:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Eyarn add -D sass\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2\u003ETypeScript\u003C\u002Fh2\u003E\n\u003Cp\u003EVue 3 has very good support for \u003Ca href=\"https:\u002F\u002Fwww.typescriptlang.org\u002F\"\u003ETypeScript\u003C\u002Fa\u003E. Whether you want to use it for better typing in the new Composition API or just to improve editor autocompletion, Vite supports TypeScript out of the box. Rename your \u003Ccode\u003Emain.js\u003C\u002Fcode\u003E file to \u003Ccode\u003Emain.ts\u003C\u002Fcode\u003E and you're ready to go.\u003C\u002Fp\u003E\n\u003Cp\u003EA TypeScript-based Single File Component's \u003Ccode\u003E&lt;script&gt;\u003C\u002Fcode\u003E block typically looks like this:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-js\"\u003Eimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'MyComponent'\n})\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2\u003ECode Formatting\u003C\u002Fh2\u003E\n\u003Cp\u003ETo keep my code style consistent, I use \u003Ca href=\"https:\u002F\u002Fprettier.io\u002F\"\u003EPrettier\u003C\u002Fa\u003E. Prettier has great support for Vue and integrates well with other tools (editors, linters...). To use Prettier, install it first:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Eyarn add -D prettier\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EYou can now configure your code style by adding \u003Ccode\u003E.prettierrc.json\u003C\u002Fcode\u003E to the root of your project. I like to keep mine close to the default configuration:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-js\"\u003E{\n  \"semi\": false,\n  \"singleQuote\": true,\n  \"trailingComma\": \"all\"\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2\u003ELinting\u003C\u002Fh2\u003E\n\u003Cp\u003EMost code editors have support for \u003Ca href=\"https:\u002F\u002Feslint.org\u002F\"\u003EESLint\u003C\u002Fa\u003E code inspection. It will prevent bugs by warning you for common errors. Setting everything up correctly took some trial and error, but here's how I did it.\u003C\u002Fp\u003E\n\u003Cp\u003EFirst, install the necessary packages by running\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Eyarn add -D eslint eslint-config-prettier eslint-plugin-vue\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EIf you're using TypeScript, you should also install the following packages:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Eyarn add -D typescript @typescript-eslint\u002Feslint-plugin @typescript-eslint\u002Fparser @typescript-eslint\u002Feslint-plugin @vue\u002Feslint-config-typescript typescript\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003ENow add the following \u003Ccode\u003E.eslintrc.js\u003C\u002Fcode\u003E to the root of your project:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-js\"\u003Emodule.exports = {\n  root: true,\n  env: {\n    node: true,\n  },\n  extends: [\n    'plugin:vue\u002Fvue3-recommended',\n    'eslint:recommended',\n    'prettier',\n    'prettier\u002Fvue',\n    '@vue\u002Ftypescript',\n  ],\n  plugins: ['vue'],\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003ETake a look at the \u003Ca href=\"https:\u002F\u002Feslint.vuejs.org\u002F\"\u003EESLint Vue Plugin docs\u003C\u002Fa\u003E to see how you can configure your editor to work with ESLint.\u003C\u002Fp\u003E\n\u003Cp\u003EESLint will now take both your Prettier config and the recommended Vue coding rules into account. You can replace \u003Ccode\u003Eplugin:vue\u002Fvue3-recommended\u003C\u002Fcode\u003E with one of the following values, depending on how you strict you would like ESLint to be:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cstrong\u003EBase Rules\u003C\u002Fstrong\u003E: \u003Ccode\u003Eplugin:vue\u002Fbase\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003EEssential\u003C\u002Fstrong\u003E: \u003Ccode\u003Eplugin:vue\u002Fvue3-essential\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003EStrongly recommended\u003C\u002Fstrong\u003E: \u003Ccode\u003Eplugin:vue\u002Fvue3-strongly-recommended\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2\u003ETLDR;\u003C\u002Fh2\u003E\n\u003Cp\u003ESince I started using this rather minimal Vite-based dev setup, I spent more time on actual coding and less time on configuring tools or waiting for builds to complete. I think Vite (and similar tools like Snowpack) will play a big role in making modern front-end coding more enjoyable and easier to get started with.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EInterested in learning more about developing interactive web apps with Vue? Don't hesitate to \u003Ca href=\"https:\u002F\u002Fwww.simonwuyts.com\u002Fcontact\u002F\"\u003Eask me\u003C\u002Fa\u003E about my Vue workshops.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E",tags:["css","javascript","typescript","vue"],slug:"vue-3-a-modern-setup-that-will-save-you-time",date:"2020-09-12",social_image:{id:87,storage:"s3",private_hash:"hgfhi9m3rsgs8g4k",filename_disk:"adc44668-b73f-4c3a-9014-a501efa93e9b.jpg",filename_download:"social.jpg",title:"Social",type:"image\u002Fjpeg",uploaded_by:1,uploaded_on:"2020-09-12 11:50:09",charset:d,filesize:251712,width:1200,height:630,duration:0,embed:a,folder:a,description:d,location:d,tags:[],checksum:"dfa4fd2411055acd932fadc1d51fc66a",metadata:a,data:{full_url:e,url:e,asset_url:"\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k",thumbnails:[{key:"directus-small-crop",url:"https:\u002F\u002Fportfolio.simonwuyts.eu\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=directus-small-crop",relative_url:"\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=directus-small-crop",dimension:f,width:b,height:b},{key:"directus-small-contain",url:"https:\u002F\u002Fportfolio.simonwuyts.eu\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=directus-small-contain",relative_url:"\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=directus-small-contain",dimension:f,width:b,height:b},{key:"directus-medium-crop",url:"https:\u002F\u002Fportfolio.simonwuyts.eu\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=directus-medium-crop",relative_url:"\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=directus-medium-crop",dimension:g,width:c,height:c},{key:"directus-medium-contain",url:"https:\u002F\u002Fportfolio.simonwuyts.eu\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=directus-medium-contain",relative_url:"\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=directus-medium-contain",dimension:g,width:c,height:c},{key:"directus-large-crop",url:"https:\u002F\u002Fportfolio.simonwuyts.eu\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=directus-large-crop",relative_url:"\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=directus-large-crop",dimension:h,width:i,height:j},{key:"directus-large-contain",url:"https:\u002F\u002Fportfolio.simonwuyts.eu\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=directus-large-contain",relative_url:"\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=directus-large-contain",dimension:h,width:i,height:j},{key:"thumbnail",url:"https:\u002F\u002Fportfolio.simonwuyts.eu\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=thumbnail",relative_url:"\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=thumbnail",dimension:"200x200",width:k,height:k},{key:"casethumb",url:"https:\u002F\u002Fportfolio.simonwuyts.eu\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=casethumb",relative_url:"\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=casethumb",dimension:"848x848",width:l,height:l},{key:"caseheader",url:"https:\u002F\u002Fportfolio.simonwuyts.eu\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=caseheader",relative_url:"\u002Fportfolio\u002Fassets\u002Fhgfhi9m3rsgs8g4k?key=caseheader",dimension:"1280x1280",width:m,height:m}],embed:a}}}}],fetch:[],mutations:void 0}}(null,64,300,"","https:\u002F\u002Fs3.eu-west-3.amazonaws.com\u002Fsimonwuyts-portfolio\u002Fadc44668-b73f-4c3a-9014-a501efa93e9b.jpg","64x64","300x300","800x600",800,600,200,848,1280)));